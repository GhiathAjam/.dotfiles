# --theme="1337"
# --theme="Coldark-Cold"
--theme="Coldark-Dark"
# --theme="DarkNeon"
# --theme="Dracula"
# --theme="GitHub"
# --theme="Monokai Extended"
# --theme="Monokai Extended Bright"
# --theme="Monokai Extended Light"
# --theme="Monokai Extended Origin"
# --theme="Nord"
# --theme="OneHalfDark"
# --theme="OneHalfLight"
# --theme="Solarized (dark)"
# --theme="Solarized (light)"
# --theme="Sublime Snazzy"
# --theme="TwoDark"
# --theme="Visual Studio Dark+"
# --theme="ansi"
# --theme="base16"
# --theme="base16-256"
# --theme="gruvbox-dark"
# --theme="gruvbox-light"
# --theme="zenburn"

--italic-text=always

# Syntax mappings: map a certain filename pattern to a language.
#   Example 1: use the C++ syntax for Arduino .ino files
#   Example 2: Use ".gitignore"-style highlighting for ".ignore" files
#--map-syntax "*.ino:C++"
#--map-syntax ".ignore:Git Ignore"

# THIS BREAKS COLORS ?
# Show non-printable characters like space, tab or newline. This option can also be used
# to print binary files. Use '--tabs' to control the width of the tab-placeholders.
# --show-all

# Use a width of 0 to pass tabs through directly
--tabs 2

# --wrap <mode>
# Specify the text-wrapping mode (*auto*, never, character). The '--terminal-width' option
# can be used in addition to control the output width.

# Explicitly set the width of the terminal instead of determining it automatically. If
# prefixed with '+' or '-', the value will be treated as an offset to the actual terminal
# width. See also: '--wrap'.
--terminal-width -2

# --decorations <when>
# Specify when to use the decorations that have been specified via '--style'. The
# automatic mode only enables decorations if an interactive terminal is detected. Possible
# values: *auto*, never, always.

# -f, --force-colorization
# Alias for '--decorations=always --color=always'. This is useful if the output of bat is
# piped to another program, but you want to keep the colorization/decorations.

# --paging <when>
# Specify when to use the pager. To disable the pager, use --paging=never' or its
# alias,'-P'. To disable the pager permanently, set BAT_PAGER to an empty string. To
# control which pager is used, see the '--pager' option. Possible values: *auto*, never,
# always.

# --pager <command>
# Determine which pager is used. This option will override the PAGER and BAT_PAGER
# environment variables. The default pager is 'less'. To control when the pager is used,
# see the '--paging' option. Example: '--pager "less -RF"'.

# -m, --map-syntax <glob:syntax>
# Map a glob pattern to an existing syntax name. The glob pattern is matched on the full
# path and the filename. For example, to highlight *.build files with the Python syntax,
# use -m '*.build:Python'. To highlight files named '.myignore' with the Git Ignore
# syntax, use -m '.myignore:Git Ignore'. Note that the right-hand side is the *name* of
# the syntax, not a file extension.

# --ignored-suffix <ignored-suffix>
# Ignore extension. For example:
# 'bat --ignored-suffix ".dev" my_file.json.dev' will use JSON syntax, and ignore '.dev'

# Configure which elements (line numbers, file headers, grid borders, Git modifications,
# ..) to display in addition to the file contents. The argument is a comma-separated list
# of components to display (e.g. 'numbers,changes,grid') or a pre-defined style ('full').
#
# Possible values:
#
# * default: enables recommended style components (default).
# * full: enables all available components.
# * auto: same as 'default', unless the output is piped.
# * plain: disables all available components.
# * changes: show Git modification markers.
# * header: alias for 'header-filename'.
# * header-filename: show filenames before the content.
# * header-filesize: show file sizes before the content.
# * grid: vertical/horizontal lines to separate side bar
# and the header from the content.
# * rule: horizontal lines to delimit files.
# * numbers: show line numbers in the side bar.
# * snip: draw separation lines between distinct line ranges.
--style full

# -L, --list-languages
# Display a list of supported languages for syntax highlighting.
